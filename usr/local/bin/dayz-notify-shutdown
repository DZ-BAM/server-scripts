#! /usr/bin/env python3
"""Server shutdown notification script."""

from argparse import ArgumentParser
from pathlib import Path
from re import fullmatch
from time import sleep
from typing import Iterator

from dzdsu.constants import JSON_FILE
from dzdsu.server import load_servers
from rcon.battleye import Client

CFG_REGEX = r'^(\w+)\s*=\s*(\w+);.*'
COMMAND = 'say -1 Server is going down for maintenance in {}!'
PARSER = ArgumentParser(description=__doc__)
PARSER.add_argument('server', help='server name')
PARSER.add_argument('gracetime', type=int, help='grace time in seconds')


def parse_rcon_value(key: str, value: str) -> bool | int | str:
    """Parses an RCon config value."""

    if key == 'RConPort':
        return int(value)

    if key == 'RestrictRCon':
        return bool(int(value))

    return value


def read_rcon_config(filename: Path) -> Iterator[tuple[str, str]]:
    """Reads the RCon configuration."""

    with filename.open('r', encoding='ascii') as file:
        for line in file:
            if (line := line.strip()) and not line.startswith('#'):
                key, value = line.split(maxsplit=1)
                yield key, parse_rcon_value(key, value)


def get_max_players(filename: Path) -> int:
    """Returns the max players amount."""

    with filename.open('r', encoding='utf-8') as file:
        for line in file:
            if not (line := line.strip()):
                continue

            if (match := fullmatch(CFG_REGEX, line)) is None:
                continue

            key, value = match.groups()

            if key == 'maxPlayers':
                return int(value)

    raise ValueError('Config setting "maxPlayers" not found.')


def main():
    """Runs the script."""

    args = PARSER.parse_args()
    servers = load_servers(JSON_FILE)
    server = servers[args.server]
    rcon_config_file = list(server.base_dir.glob('battleye/*.cfg'))[0]
    rcon_config = dict(read_rcon_config(rcon_config_file))
    passwd = rcon_config['RConPassword']
    max_players = get_max_players(server.base_dir / 'serverDZ.cfg')

    with Client(
            rcon_config.get('RConIP', '127.0.0.1'),
            rcon_config.get('RConPort', 2302),
            timeout=10
    ) as client:
        for passed in range(args.gracetime):
            client.login(passwd)
            client.run(COMMAND.format(args.gracetime - passed))
            sleep(1)

        for player in range(max_players):
            client.run(f'kick {player} Server restart')


if __name__ == '__main__':
    main()
